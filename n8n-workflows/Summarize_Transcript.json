{
  "name": "Summarize Transcript",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -720,
        240
      ],
      "id": "a3ae8854-9492-49fe-a329-1db7df773fdd",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "fileSelector": "={{ $json.filePath }}",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -440,
        140
      ],
      "id": "826d2baf-1a20-4919-a3bd-c4e3317ca503",
      "name": "Read/Write Files from Disk"
    },
    {
      "parameters": {
        "operation": "text",
        "destinationKey": "transcript",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -180,
        140
      ],
      "id": "254f183f-2251-4d53-8de2-7f1be4189c92",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "toText",
        "sourceProperty": "text",
        "options": {}
      },
      "type": "n8n-nodes-base.convertToFile",
      "typeVersion": 1.1,
      "position": [
        480,
        140
      ],
      "id": "f4dff10e-fc52-41ea-931f-8939626ce87d",
      "name": "Convert to File"
    },
    {
      "parameters": {
        "operation": "write",
        "fileName": "=/data/shared/summarize_input/{{ $('Set baseFileName').item.json.baseFileName }}_transformed.txt",
        "options": {}
      },
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        740,
        140
      ],
      "id": "18a4260f-2921-47c4-bcd0-5707f48289a6",
      "name": "Read/Write Files from Disk1"
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import re\n\ndef consolidate_speaker_blocks_with_timestamps(transcript_text):\n    lines = transcript_text.strip().split(\"\\n\")\n    consolidated = []\n    current_speaker = None\n    current_text = []\n    start_time = None\n\n    for line in lines:\n        match = re.match(r\"\\[(\\d{2}:\\d{2}:\\d{2}\\.\\d+)\\] (SPEAKER_\\d+):\\s*(.*)\", line)\n        if match:\n            timestamp, speaker, text = match.groups()\n            if speaker != current_speaker:\n                if current_speaker is not None:\n                    consolidated.append(f\"[{start_time}] {current_speaker}:\\n{' '.join(current_text)}\\n\")\n                current_speaker = speaker\n                current_text = [text]\n                start_time = timestamp\n            else:\n                current_text.append(text)\n        elif current_speaker:\n            current_text.append(line.strip())\n\n    if current_speaker and current_text:\n        consolidated.append(f\"[{start_time}] {current_speaker}:\\n{' '.join(current_text)}\\n\")\n\n    return \"\\n\".join(consolidated)\n\nfor item in items:\n    input_text = item['json'].get('transcript', '')  # <--- hier angepasst!\n    output_text = consolidate_speaker_blocks_with_timestamps(input_text)\n    item['json']['text'] = output_text\n\nreturn items\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        20,
        140
      ],
      "id": "020059fc-b762-40d2-b17a-1083da8bd1c8",
      "name": "Consolidate Speaker Sections"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -720,
        40
      ],
      "id": "1660b96b-3caf-4218-983a-3d256d063f8c",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a0521520-3420-40f7-a617-350413ae2577",
              "name": "baseFileName",
              "value": "={{ $('Read/Write Files from Disk').item.json.fileName.split('/').pop().split('.')[0] }}",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        260,
        140
      ],
      "id": "12e12847-290a-45e0-a9c7-b26e1b0e265f",
      "name": "Set baseFileName"
    }
  ],
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "json": {
          "filePath": "/data/shared/summarize_input/2025-06-17 16-36-00.txt"
        }
      },
      {
        "json": {
          "baseFileName": "2025-06-17 16-36-00"
        }
      }
    ]
  },
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Consolidate Speaker Sections",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert to File": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Consolidate Speaker Sections": {
      "main": [
        [
          {
            "node": "Set baseFileName",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set baseFileName": {
      "main": [
        [
          {
            "node": "Convert to File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b8fcb088-59a1-41ac-bfcd-547101d7980f",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e19a58ffb0fd248efa26d031fe3b9360ad1bd1b828d9ae749d875af6b5124b71"
  },
  "id": "o8jkhp342lSgaKvA",
  "tags": []
}